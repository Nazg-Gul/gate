package UI.Forms.QuestionDialog;

import logic.product.Value;
import logic.frames.ISlot;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.WindowConstants;

/**
 *
 * @author alexanis
 */
public class QuestionDialog extends javax.swing.JDialog
{

  private QuestionPanel questionPanel = null;
  private ISlot slot = null;
  private ArrayList<JRadioButton> radioButtons = null;
  private int result = 1;

  /** Creates new form QuestionDialog */
  public QuestionDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    myInitComponent();
  }

  private void myInitComponent()
  {
    questionPanel = new QuestionPanel();
    radioButtons = new ArrayList<JRadioButton>();
    add(questionPanel, BorderLayout.CENTER);
  }

  public void run(ISlot slot)
  {
    this.slot = slot;

    String question = "" /*variable.getQuestion()*/;
    if (question.equals(""))
    {
      question = slot.getParent().getName() + "." + slot.getName() + "?";
    }

    ArrayList<Value> values = new ArrayList<Value>();
    if (slot.getValue() != null)
    {
      values = slot.getValue().getDomen().getValues();
    }

    questionPanel.setQuestion(question);

    for (int i = 0; i < values.size(); i++)
    {
      Value v = values.get(i);
      JRadioButton jrb = new JRadioButton(v.toString());
      radioButtons.add(jrb);
      if (i == 0)
      {
        jrb.setSelected(true);
      }
      questionPanel.addAnswer(jrb);
    }

    pack();
    java.awt.Frame parent = (java.awt.Frame) getParent();
    this.setLocation((parent.getWidth() - this.getWidth()) / 2 + parent.getX(), (parent.getHeight() - this.getHeight()) / 2 + parent.getY());
    setVisible(true);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new JPanel();
    jPanel2 = new JPanel();
    jButtonNext = new JButton();
    jButtonCancel = new JButton();

    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

    jPanel1.setLayout(new BorderLayout());
    getContentPane().add(jPanel1, BorderLayout.CENTER);

    jPanel2.setLayout(new GridLayout(1, 2, 5, 5));

    jButtonNext.setIcon(new ImageIcon(getClass().getResource("/UI/Forms/Icons/gtk-apply.png"))); // NOI18N
    jButtonNext.setText("Далее");
    jButtonNext.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonNextActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonNext);

    jButtonCancel.setIcon(new ImageIcon(getClass().getResource("/UI/Forms/Icons/gtk-cancel.png"))); // NOI18N
    jButtonCancel.setText("Отмена");
    jButtonCancel.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonCancelActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonCancel);

    getContentPane().add(jPanel2, BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
      result = 0;
      this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

  private String getSelectedRadioButton()
  {
    for (JRadioButton jrb : radioButtons)
    {
      if (jrb.isSelected())
      {
        return jrb.getText();
      }
    }
    return null;
  }

  public int getResult()
  {
    return result;
  }

    private void jButtonNextActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
      if (slot.getValue() != null)
      {
        for (Value v : slot.getValue().getDomen().getValues())
        {
          if (v.getValue().equals(getSelectedRadioButton()))
          {
            slot.setValue(new Value(v.getValue()));
            break;
          }
        }
      }

      this.dispose();
    }//GEN-LAST:event_jButtonNextActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JButton jButtonCancel;
  private JButton jButtonNext;
  private JPanel jPanel1;
  private JPanel jPanel2;
  // End of variables declaration//GEN-END:variables
}
