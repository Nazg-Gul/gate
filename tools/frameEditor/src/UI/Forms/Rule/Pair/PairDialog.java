package UI.Forms.Rule.Pair;

import logic.product.Domen;
import logic.product.Pair;
import logic.product.Value;
import logic.frames.Frame;
import logic.frames.Frameset;
import logic.frames.ISlot;
import logic.frames.Slot;
import UI.Forms.Domen.ChangeDomenDialog;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;

public class PairDialog extends javax.swing.JDialog
{

  private Pair pair;
  private ArrayList<Pair> pairs;

  /** Creates new form PairDialog */
  public PairDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    this.setLocation((parent.getWidth() - this.getWidth()) / 2 + parent.getX(),
            (parent.getHeight() - this.getHeight()) / 2 + parent.getY());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new JPanel();
    jPanel3 = new JPanel();
    jComboBoxSlot = new JComboBox();
    jButtonSlot = new JButton();
    jComboBoxFrame = new JComboBox();
    jLabel1 = new JLabel();
    jLabel2 = new JLabel();
    jButtonFrame = new JButton();
    jPanel4 = new JPanel();
    jComboBoxValue = new JComboBox();
    jButtonValue = new JButton();
    jPanel2 = new JPanel();
    jButtonOk = new JButton();
    jButtonCancel = new JButton();

    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

    jPanel1.setLayout(new GridLayout(1, 2));

    jPanel3.setBorder(BorderFactory.createTitledBorder("Слот"));

    jComboBoxSlot.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    jComboBoxSlot.addItemListener(new ItemListener() {
      public void itemStateChanged(ItemEvent evt) {
        jComboBoxSlotItemStateChanged(evt);
      }
    });

    jButtonSlot.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/more.png"))); // NOI18N
    jButtonSlot.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonSlotActionPerformed(evt);
      }
    });

    jComboBoxFrame.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    jComboBoxFrame.addItemListener(new ItemListener() {
      public void itemStateChanged(ItemEvent evt) {
        jComboBoxFrameItemStateChanged(evt);
      }
    });

    jLabel1.setText("Фрейм:");

    jLabel2.setText("Слот:");


    jButtonFrame.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/more.png"))); // NOI18N
    GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(jLabel2))
        .addPreferredGap(ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING)
          .addComponent(jComboBoxSlot, 0, 227, Short.MAX_VALUE)
          .addComponent(jComboBoxFrame, 0, 227, Short.MAX_VALUE))
        .addPreferredGap(ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING)
          .addComponent(jButtonFrame, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
          .addComponent(jButtonSlot, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
        .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
          .addGroup(jPanel3Layout.createParallelGroup(Alignment.BASELINE)
            .addComponent(jLabel1)
            .addComponent(jComboBoxFrame, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
          .addComponent(jButtonFrame))
        .addPreferredGap(ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING, false)
          .addComponent(jButtonSlot, Alignment.LEADING, 0, 0, Short.MAX_VALUE)
          .addGroup(Alignment.LEADING, jPanel3Layout.createParallelGroup(Alignment.BASELINE)
            .addComponent(jComboBoxSlot)
            .addComponent(jLabel2)))
        .addContainerGap())
    );

    jPanel1.add(jPanel3);

    jPanel4.setBorder(BorderFactory.createTitledBorder("Значение"));

    jComboBoxValue.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    jButtonValue.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/more.png"))); // NOI18N
    jButtonValue.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonValueActionPerformed(evt);
      }
    });

    GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jComboBoxValue, 0, 291, Short.MAX_VALUE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jButtonValue, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(jComboBoxValue, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
          .addComponent(jButtonValue, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    jPanel1.add(jPanel4);

    getContentPane().add(jPanel1, BorderLayout.CENTER);

    jPanel2.setLayout(new GridLayout(1, 2, 5, 5));

    jButtonOk.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/apply.png"))); // NOI18N
    jButtonOk.setText("ОК");
    jButtonOk.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonOkActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonOk);

    jButtonCancel.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/cancel.png"))); // NOI18N
    jButtonCancel.setText("Отмена");
    jButtonCancel.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonCancelActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonCancel);

    getContentPane().add(jPanel2, BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  public void run(String title, Pair pair, ArrayList<Pair> pairs)
  {
    setTitle(title);

    Frame frame = null;
    ISlot slot = null;
    Value value = null;

    if (pair != null)
    {
      frame = pair.getFrame();
      slot = pair.getSlot();
      value = pair.getValue();
    }

    jComboBoxFrame.setModel(new DefaultComboBoxModel(Frameset.getInstance().getAllFrames().toArray()));
    jComboBoxFrame.setSelectedItem(frame);
    jComboBoxFrameItemStateChanged(null);
    jComboBoxSlot.setSelectedItem(slot);
    jComboBoxSlotItemStateChanged(null);
    jComboBoxValue.setSelectedItem(value);

    this.pair = pair;
    this.pairs = pairs;
    setVisible(true);
  }

  public Pair getPair()
  {
    return pair;
  }

    private void jButtonValueActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonValueActionPerformed
      ChangeDomenDialog dialog = new ChangeDomenDialog((java.awt.Frame) getParent(), true);
      ISlot slot = (ISlot) jComboBoxSlot.getSelectedItem();
      Domen domen = slot != null ? slot.getValue().getDomen() : null;
      Value value = (Value) jComboBoxValue.getSelectedItem();
      dialog.run(domen, value);
      jComboBoxSlotItemStateChanged(null);
      jComboBoxValue.setSelectedItem(dialog.getValue());
}//GEN-LAST:event_jButtonValueActionPerformed

    private void jButtonSlotActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonSlotActionPerformed
// TODO Нужна ли функциональность типа контексного пополнения слотов и доменов?
// Почему то я думаю что на это можно забить
//      ChangeVariableDialog dialog = new ChangeVariableDialog((java.awt.Frame) getParent(), true);
//      dialog.run((Variable) jComboBoxSlot.getSelectedItem());
////      DefaultComboBoxModel model = new DefaultComboBoxModel(scratchpad.getVariables());
////      jComboBoxVariable.setModel(model);
//      jComboBoxSlot.setSelectedItem(dialog.getVariable());
//      jComboBoxVariableItemStateChanged(null);
    }//GEN-LAST:event_jButtonSlotActionPerformed

    private void jComboBoxSlotItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_jComboBoxSlotItemStateChanged
      ISlot slot = (ISlot) jComboBoxSlot.getSelectedItem();
      ArrayList<Value> values = new ArrayList<Value>();
      if (slot != null && slot.getType() == Slot.ENUM)
      {
        values = slot.getValue().getDomen().getValues();
      }
      jComboBoxValue.setModel(new DefaultComboBoxModel(values.toArray()));
    }//GEN-LAST:event_jComboBoxSlotItemStateChanged

    private void jButtonCancelActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

  private boolean exist(Pair pair, ArrayList<Pair> pairs)
  {
    for (Pair p : pairs)
    {
      if (p.getSlot().equals(pair.getSlot()))
      {
        return true;
      }
    }
    return false;
  }

    private void jButtonOkActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
      Frame frame = (Frame) jComboBoxFrame.getSelectedItem();
      ISlot slot = (ISlot) jComboBoxSlot.getSelectedItem();
      Value value = (Value) jComboBoxValue.getSelectedItem();
      if (frame == null)
      {
        JOptionPane.showMessageDialog(this, "Выберите фрейм",
                "Ошибка", JOptionPane.ERROR_MESSAGE);
        return;
      }
      if (slot == null)
      {
        JOptionPane.showMessageDialog(this, "Выберите слот",
                "Ошибка", JOptionPane.ERROR_MESSAGE);
        return;
      }
      if (value == null)
      {
        JOptionPane.showMessageDialog(this, "Выберите значение",
                "Ошибка", JOptionPane.ERROR_MESSAGE);
        return;
      }
      if (pair == null)
      {
        pair = new Pair(frame, slot, value);
        if (!exist(pair, pairs))
        {
          pairs.add(pair);
        } else
        {
          JOptionPane.showMessageDialog(this, "Такой слот уже используется "
                  + "в этой части правила",
                  "Ошибка", JOptionPane.ERROR_MESSAGE);
          pair = null;
          return;
        }
      }
      pair.setFrame(frame);
      pair.setSlot(slot);
      pair.setValue(value);

      this.dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jComboBoxFrameItemStateChanged(ItemEvent evt)//GEN-FIRST:event_jComboBoxFrameItemStateChanged
    {//GEN-HEADEREND:event_jComboBoxFrameItemStateChanged
      Frame frame = (Frame) jComboBoxFrame.getSelectedItem();
      ArrayList<ISlot> slots = new ArrayList<ISlot>();
      if (frame != null)
      {
        slots = frame.getSlots();
      }
      jComboBoxSlot.setModel(new DefaultComboBoxModel(slots.toArray()));
      jComboBoxSlotItemStateChanged(null);
    }//GEN-LAST:event_jComboBoxFrameItemStateChanged
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JButton jButtonCancel;
  private JButton jButtonFrame;
  private JButton jButtonOk;
  private JButton jButtonSlot;
  private JButton jButtonValue;
  private JComboBox jComboBoxFrame;
  private JComboBox jComboBoxSlot;
  private JComboBox jComboBoxValue;
  private JLabel jLabel1;
  private JLabel jLabel2;
  private JPanel jPanel1;
  private JPanel jPanel2;
  private JPanel jPanel3;
  private JPanel jPanel4;
  // End of variables declaration//GEN-END:variables
}
