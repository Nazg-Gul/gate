package UI.Forms.Rule;

import logic.product.Pair;
import logic.product.Rule;
import UI.Forms.Rule.Pair.PairDialog;
import UI.Forms.Rule.Pair.PairTable;
import UI.Forms.Rule.Pair.PairTableModel;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DropMode;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.ListSelectionModel;
import javax.swing.WindowConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class RuleDialog extends javax.swing.JDialog
{

  private Rule rule;
  private ArrayList<Rule> rules;
  private ArrayList<Pair> ifPart;
  private ArrayList<Pair> thenPart;

  /** Creates new form RuleDialog */
  public RuleDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    myInitComponents();
    this.setLocation((parent.getWidth() - this.getWidth()) / 2 + parent.getX(),
            (parent.getHeight() - this.getHeight()) / 2 + parent.getY());
  }

  private void myInitComponents()
  {
    ((PairTableModel) jTableIfPart.getModel()).setDataList(ifPart);
    ((PairTableModel) jTableThenPart.getModel()).setDataList(thenPart);
    jTableIfPart.getSelectionModel().addListSelectionListener(new ListSelectionListener()
    {

      @Override
      public void valueChanged(ListSelectionEvent e)
      {
        updateIfPartButtons();
      }
    });
    jTableThenPart.getSelectionModel().addListSelectionListener(new ListSelectionListener()
    {

      @Override
      public void valueChanged(ListSelectionEvent e)
      {
        updateThenPartButtons();
      }
    });
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new JLabel();
    jPanel1 = new JPanel();
    jPanel3 = new JPanel();
    jPanel4 = new JPanel();
    jPanel2 = new JPanel();
    jButtonIfPartAdd = new JButton();
    jButtonIfPartEdit = new JButton();
    jButtonIfPartDelete = new JButton();
    jScrollPane1 = new JScrollPane();
    jTableIfPart = new PairTable();
    jPanel5 = new JPanel();
    jPanel6 = new JPanel();
    jButtonThenPartAdd = new JButton();
    jButtonThenPartEdit = new JButton();
    jButtonThenPartDelete = new JButton();
    jScrollPane2 = new JScrollPane();
    jTableThenPart = new PairTable();
    jLabel2 = new JLabel();
    jScrollPane3 = new JScrollPane();
    jTextAreaExplanation = new JTextArea();
    jPanel7 = new JPanel();
    jButtonOk = new JButton();
    jButtonCancel = new JButton();
    jTextFieldName = new JTextField();

    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

    jLabel1.setText("Имя правила:");

    jPanel1.setLayout(new BorderLayout());

    jPanel3.setLayout(new GridLayout(1, 2));

    jPanel4.setBorder(BorderFactory.createTitledBorder("Посылка"));
    jPanel4.setLayout(new BorderLayout());

    jButtonIfPartAdd.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/add.png"))); // NOI18N
    jButtonIfPartAdd.setText("Добавить");
    jButtonIfPartAdd.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonIfPartAddActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonIfPartAdd);

    jButtonIfPartEdit.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/edit.png"))); // NOI18N
    jButtonIfPartEdit.setText("Изменить");
    jButtonIfPartEdit.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonIfPartEditActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonIfPartEdit);

    jButtonIfPartDelete.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/remove.png"))); // NOI18N
    jButtonIfPartDelete.setText("Удалить");
    jButtonIfPartDelete.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonIfPartDeleteActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonIfPartDelete);

    jPanel4.add(jPanel2, BorderLayout.SOUTH);

    jScrollPane1.setBorder(BorderFactory.createEtchedBorder());

    jTableIfPart.setModel(new PairTableModel());
    jTableIfPart.setDropMode(DropMode.INSERT_ROWS);
    jTableIfPart.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    jTableIfPart.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(jTableIfPart);

    jPanel4.add(jScrollPane1, BorderLayout.CENTER);

    jPanel3.add(jPanel4);

    jPanel5.setBorder(BorderFactory.createTitledBorder("Заключение"));
    jPanel5.setLayout(new BorderLayout());

    jButtonThenPartAdd.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/add.png"))); // NOI18N
    jButtonThenPartAdd.setText("Добавить");
    jButtonThenPartAdd.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonThenPartAddActionPerformed(evt);
      }
    });
    jPanel6.add(jButtonThenPartAdd);

    jButtonThenPartEdit.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/edit.png"))); // NOI18N
    jButtonThenPartEdit.setText("Изменить");
    jButtonThenPartEdit.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonThenPartEditActionPerformed(evt);
      }
    });
    jPanel6.add(jButtonThenPartEdit);

    jButtonThenPartDelete.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/remove.png"))); // NOI18N
    jButtonThenPartDelete.setText("Удалить");
    jButtonThenPartDelete.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonThenPartDeleteActionPerformed(evt);
      }
    });
    jPanel6.add(jButtonThenPartDelete);

    jPanel5.add(jPanel6, BorderLayout.SOUTH);

    jScrollPane2.setBorder(BorderFactory.createEtchedBorder());

    jTableThenPart.setModel(new PairTableModel());
    jTableThenPart.setDropMode(DropMode.INSERT_ROWS);
    jTableThenPart.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    jTableThenPart.getTableHeader().setReorderingAllowed(false);
    jScrollPane2.setViewportView(jTableThenPart);

    jPanel5.add(jScrollPane2, BorderLayout.CENTER);

    jPanel3.add(jPanel5);

    jPanel1.add(jPanel3, BorderLayout.CENTER);

    jLabel2.setText("Объяснение:");

    jTextAreaExplanation.setColumns(20);
    jTextAreaExplanation.setLineWrap(true);
    jTextAreaExplanation.setRows(5);
    jTextAreaExplanation.setWrapStyleWord(true);
    jScrollPane3.setViewportView(jTextAreaExplanation);

    jPanel7.setLayout(new GridLayout(1, 0, 5, 5));

    jButtonOk.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/apply.png"))); // NOI18N
    jButtonOk.setText("ОК");
    jButtonOk.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonOkActionPerformed(evt);
      }
    });
    jPanel7.add(jButtonOk);

    jButtonCancel.setIcon(new ImageIcon(getClass().getResource("/Images/16x16/cancel.png"))); // NOI18N
    jButtonCancel.setText("Отмена");
    jButtonCancel.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        jButtonCancelActionPerformed(evt);
      }
    });
    jPanel7.add(jButtonCancel);

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(Alignment.LEADING)
          .addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
          .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(jTextFieldName, GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE))
          .addComponent(jLabel2)
          .addComponent(jPanel7, GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(jTextFieldName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 189, GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(jLabel2)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 154, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.UNRELATED)
        .addComponent(jPanel7, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jButtonIfPartAddActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonIfPartAddActionPerformed
      PairDialog pd = new PairDialog((java.awt.Frame) getParent(), true);
      pd.run("Добавление посылки", null, ifPart);
      ((PairTableModel) jTableIfPart.getModel()).fireTableDataChanged();

      if (pd.getPair() != null)
      {
        int index = ifPart.size() - 1;
        jTableIfPart.setRowSelectionInterval(index, index);
      }
    }//GEN-LAST:event_jButtonIfPartAddActionPerformed

    private void jButtonCancelActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
      String name = jTextFieldName.getText();
      int ifPartSize = jTableIfPart.getRowCount();
      int thenPartSize = jTableThenPart.getRowCount();
      String explanation = jTextAreaExplanation.getText();

      if (name.equals(""))
      {
        JOptionPane.showMessageDialog(this, "Введите имя правила", "Ошибка",
                JOptionPane.ERROR_MESSAGE);
        jTextFieldName.selectAll();
        return;
      }

      if (ifPartSize == 0)
      {
        JOptionPane.showMessageDialog(this, "Посылка не может быть пустой",
                "Ошибка", JOptionPane.ERROR_MESSAGE);
        return;
      }

      if (thenPartSize == 0)
      {
        JOptionPane.showMessageDialog(this, "Заключение не может быть пустым",
                "Ошибка", JOptionPane.ERROR_MESSAGE);
        return;
      }

      for (Rule r : rules)
      {
        if (r.getName().equals(name) && !(r == rule))
        {
          JOptionPane.showMessageDialog(this, "Правило с таким именем уже "
                  + "существует", "Ошибка", JOptionPane.ERROR_MESSAGE);
          jTextFieldName.selectAll();
          jTextFieldName.requestFocusInWindow();
          return;
        }
      }

      if (rule == null)
      {
        rule = new Rule();
        rules.add(rule);
      }
      rule.setName(name);
      rule.setExplanation(explanation);
      rule.setIfPart(ifPart);
      rule.setThenPart(thenPart);

      this.dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonIfPartEditActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonIfPartEditActionPerformed
      PairDialog pd = new PairDialog((java.awt.Frame) getParent(), true);
      int row = jTableIfPart.getSelectedRow();
      Pair pair = ((PairTableModel) jTableIfPart.getModel()).getValueAt(row);
      pd.run("Изменение посылки", pair, ifPart);
      ((PairTableModel) jTableIfPart.getModel()).fireTableDataChanged();
      jTableIfPart.setRowSelectionInterval(row, row);
      jTableIfPart.requestFocusInWindow();
    }//GEN-LAST:event_jButtonIfPartEditActionPerformed

    private void jButtonIfPartDeleteActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonIfPartDeleteActionPerformed
      if (jTableIfPart.getSelectedRowCount() == 0)
      {
        showError("Вы должны выбрать посылку перед удалением");
        return;
      }
      int row = jTableIfPart.getSelectedRow();
      row = jTableIfPart.convertRowIndexToModel(row);
      Pair pair = ((PairTableModel) jTableIfPart.getModel()).getValueAt(row);

      int res = JOptionPane.showConfirmDialog(this, "Посылка будет удалена. "
              + "Вы уверены?", "Подтверждение удаления",
              JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
      if (res == JOptionPane.YES_OPTION)
      {
        ifPart.remove(pair);
        ((PairTableModel) jTableIfPart.getModel()).fireTableDataChanged();

        int rowCount = jTableIfPart.getRowCount();
        int rowToSelect = row == rowCount ? rowCount - 1 : row;
        if (rowToSelect > -1)
        {
          jTableIfPart.setRowSelectionInterval(rowToSelect, rowToSelect);
          jTableIfPart.requestFocusInWindow();
        }
        updateIfPartButtons();
      }
    }//GEN-LAST:event_jButtonIfPartDeleteActionPerformed

    private void jButtonThenPartAddActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonThenPartAddActionPerformed
      PairDialog pd = new PairDialog((java.awt.Frame) getParent(), true);
      pd.run("Добавление заключения", null, thenPart);
      ((PairTableModel) jTableThenPart.getModel()).fireTableDataChanged();

      if (pd.getPair() != null)
      {
        int index = thenPart.size() - 1;
        jTableThenPart.setRowSelectionInterval(index, index);
      }
    }//GEN-LAST:event_jButtonThenPartAddActionPerformed

    private void jButtonThenPartEditActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonThenPartEditActionPerformed
      PairDialog pd = new PairDialog((java.awt.Frame) getParent(), true);
      int row = jTableThenPart.getSelectedRow();
      Pair pair = ((PairTableModel) jTableThenPart.getModel()).getValueAt(row);
      pd.run("Изменение заключения", pair, thenPart);
      ((PairTableModel) jTableThenPart.getModel()).fireTableDataChanged();
      jTableThenPart.setRowSelectionInterval(row, row);
      jTableThenPart.requestFocusInWindow();
    }//GEN-LAST:event_jButtonThenPartEditActionPerformed

    private void jButtonThenPartDeleteActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButtonThenPartDeleteActionPerformed
      if (jTableThenPart.getSelectedRowCount() == 0)
      {
        showError("Вы должны выбрать заключение перед удалением");
        return;
      }
      int row = jTableThenPart.getSelectedRow();
      row = jTableThenPart.convertRowIndexToModel(row);
      Pair pair = ((PairTableModel) jTableThenPart.getModel()).getValueAt(row);

      int res = JOptionPane.showConfirmDialog(this, "Заключение будет удалено. "
              + "Вы уверены?", "Подтверждение удаления",
              JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
      if (res == JOptionPane.YES_OPTION)
      {
        thenPart.remove(pair);
        ((PairTableModel) jTableThenPart.getModel()).fireTableDataChanged();

        int rowCount = jTableThenPart.getRowCount();
        int rowToSelect = row == rowCount ? rowCount - 1 : row;
        if (rowToSelect > -1)
        {
          jTableThenPart.setRowSelectionInterval(rowToSelect, rowToSelect);
          jTableThenPart.requestFocusInWindow();
        }
        updateThenPartButtons();
      }
    }//GEN-LAST:event_jButtonThenPartDeleteActionPerformed

  public void run(String title, Rule rule, ArrayList<Rule> rules)
  {
    setTitle(title);
    this.rules = rules;

    if (rule == null)
    {
      jTextFieldName.setText("");
      ifPart = new ArrayList<Pair>();
      thenPart = new ArrayList<Pair>();
      jTextAreaExplanation.setText("");
    } else
    {
      jTextFieldName.setText(rule.getName());
      ifPart = rule.getIfPart();
      thenPart = rule.getThenPart();
      jTextAreaExplanation.setText(rule.getExplanation());
    }
    ((PairTableModel) jTableIfPart.getModel()).setDataList(ifPart);
    ((PairTableModel) jTableThenPart.getModel()).setDataList(thenPart);
    updateIfPartButtons();
    updateThenPartButtons();
    jTextFieldName.selectAll();

    this.rule = rule;
    setVisible(true);
  }

  public void updateIfPartButtons()
  {
    boolean isSelectedRow = jTableIfPart.getSelectedRowCount() == 1;
    jButtonIfPartEdit.setEnabled(isSelectedRow);
    jButtonIfPartDelete.setEnabled(isSelectedRow);
  }

  public void updateThenPartButtons()
  {
    boolean isSelectedRow = jTableThenPart.getSelectedRowCount() == 1;
    jButtonThenPartEdit.setEnabled(isSelectedRow);
    jButtonThenPartDelete.setEnabled(isSelectedRow);
  }

  private void showError(String msg)
  {
    JOptionPane.showMessageDialog(this, msg, "Ошибка",
            JOptionPane.ERROR_MESSAGE);
  }

  public Rule getRule()
  {
    return rule;
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JButton jButtonCancel;
  private JButton jButtonIfPartAdd;
  private JButton jButtonIfPartDelete;
  private JButton jButtonIfPartEdit;
  private JButton jButtonOk;
  private JButton jButtonThenPartAdd;
  private JButton jButtonThenPartDelete;
  private JButton jButtonThenPartEdit;
  private JLabel jLabel1;
  private JLabel jLabel2;
  private JPanel jPanel1;
  private JPanel jPanel2;
  private JPanel jPanel3;
  private JPanel jPanel4;
  private JPanel jPanel5;
  private JPanel jPanel6;
  private JPanel jPanel7;
  private JScrollPane jScrollPane1;
  private JScrollPane jScrollPane2;
  private JScrollPane jScrollPane3;
  private JTable jTableIfPart;
  private JTable jTableThenPart;
  private JTextArea jTextAreaExplanation;
  private JTextField jTextFieldName;
  // End of variables declaration//GEN-END:variables
}
