<?php
  $lib=targ ('lib');
  $contest_id=targ ('contest_id');
  $user_id=targ ('user_id');

  // Statistics preinicialization
  $stats_info=array (
      array ('title'=>'Пытавшихся участников',    'id'=>'tries_users'),
      array ('title'=>'Решивших участников',      'id'=>'ok_users'), // %
      array ('title'=>'Зачтено решений',          'id'=>'ok_submits'),
      array ('title'=>'Не зачтено',               'id'=>'nonok_submits'),
      array ('title'=>'Процент успешных попыток', 'id'=>'ok_perc')
    );
  $stats_data=array ();
  $stats_cache=array ();

  $redirect=get_redirection ();

  $sols=$lib->GetAllSolutions ($contest_id);

  $users=$lib->GetUsersAtContest ($contest_id);

  $judges=$lib->GetJudgesAtContest ($contest_id);
  $problems=$lib->GetProblemsAtContest ($contest_id);

  $judge_assoc=array ();
  $n=count ($judges);
  for ($i=0; $i<$n; $i++)
    $judge_assoc[$judges[$i]['id']]=true;

  $contest=WT_contest_by_id ($contest_id);

  // Parse solutions
  $data=array ();
  $n=count ($sols);

  $base=$contest['settings']['timestamp'];
  $penalty=$contest['settings']['penalty'];

  $max_problems=0;
  $timestamp=-1;

  if ($contest['settings']['freezetime']>0 && !$contest['settings']['unfrozen'] && !$lib->IsContestJudge ())
    $timestamp=$contest['settings']['timestamp']+$contest['settings']['duration']*60-$contest['settings']['freezetime']*60;

  $skip_ce=$contest['settings']['ignore_ce'];
  for ($i=$n-1; $i>=0; $i--) {
    $s=$sols[$i];
    if ($s['status']!=2 || $s['ignored'] || $s['errors']=='CR' || ($skip_ce && $s['errors']=='CE')) continue;
    if ($timestamp>0 && $s['timestamp']>$timestamp) continue;

    $uid=$s['user_id'];
    $pid=$s['problem_id'];

    if (!isset ($judge_assoc[$uid])) {
      // Count of users tried to send problem
      if (!$stats_cache[$pid]['tries_users'][$uid]) {
        $stats_data[$pid]['tries_users']++;
        $stats_cache[$pid]['tries_users'][$uid]=true;
      }

      if ($s['errors']=='OK') {
        if (!$stats_cache[$pid]['ok_users'][$uid]) {
          $stats_data[$pid]['ok_submits']++;
          $stats_cache[$pid]['ok_users'][$uid]=true;
        }
      } else
        $stats_data[$pid]['nonok_submits']++;
    }

/*    if (!$data[$uid][$pid]['acc']) */{
      $data[$uid][$pid]['try']++;
      $n=$s['points']-($data[$uid][$pid]['try']-1)*$penalty;
      if ($n<0) $n=0;
      $data[$uid][$pid]['points']=max ($data[$uid][$pid]['points'], $n);
      $data[$uid][$pid]['total']=max ($data[$uid][$pid]['total'], $s['points']);
    }

    if ($s['errors']=='OK')
      $data[$uid][$pid]['acc']=true;
  }

  // Sorting da data
  $user_count=count ($users);
  $problems_count=count ($problems);
  $max_total=0;

  for ($i=0; $i<$user_count; $i++) {
    if ($judge_assoc[$users[$i]['id']]) continue;
    $u=$users[$i];
    $uid=$u['id'];
    $data[$uid]['total']=0;
    for ($j=0; $j<$problems_count; $j++) {
      $p=$problems[$j];
      $pid=$p['id'];
      $t=$data[$uid][$pid];
      $data[$uid]['total']+=$t['points'];
    }
    $max_total=max ($max_total, $data[$uid]['total']);
  }
  
  $n=count ($users);
  foreach ($stats_data as $pid=>$v) {
      $stats_data[$pid]['ok_perc']=floor (($stats_data[$pid]['ok_submits']/($stats_data[$pid]['nonok_submits']+$stats_data[$pid]['ok_submits']))*100).'%';
      $stats_data[$pid]['ok_users']=floor (($stats_data[$pid]['ok_submits']/($n-$deltan))*100).'%';
  }

  function KIROV_Monitor_Comparator ($data, $a, $b) {
    $r1=$data[$a['id']]; $r2=$data[$b['id']];
    if ($r1['total']>$r2['total']) return 1; else
    if ($r1['total']<$r2['total']) return -1; else {
        return strcmp ($b['name'], $a['name']);
    }
  }

  // Sorting da data
  $user_count=count ($users);
  for ($i=0; $i<$user_count; $i++)
    for ($j=0; $j<$user_count-1; $j++) {
      if (KIROV_Monitor_Comparator (&$data, $users[$j], $users[$j+1])<0)
        swap (&$users[$j], &$users[$j+1]);
    }
  
?>

<?php
/*  if ($contest['settings']['duration']) {
    print '<div style="margin-bottom: 4px; text-align: center;">';
    if (WT_contest_finished ($contest_id))
      print 'Контест завершен'; else {
        $t=(time ()-$contest['settings']['timestamp'])/60;
        if ($t>floor ($t))
          $t=floor ($t)+1; else
          $t=floor ($t);
        print 'Положение участников на минуту '.$t.' из '.$contest['settings']['duration'];
      }
    if ($contest['settings']['timestamp']+$contest['settings']['duration']*60-$contest['settings']['freezetime']*60<=time () &&
        !$contest['settings']['unfrozen'])
      print '<br>Монитор заморожен';
    print '</div>';
  }*/
?>

  <div id="monitor" style="_position: relative;">
    <table class="data">
      <tr>
        <th class="first">Место</th>
        <th>Участник</th>
<?php
  for ($i=0; $i<$problems_count; $i++) {
    $it=$problems[$i];
?>
        <th class="prb" colspan="3">
          <a href=".?page=problems&act=view&id=<?=$it['id'];?>&redirect=<?=$redirect?>"><acronym title="<?=htmlspecialchars ($it['name']);?>">Задача <?=core_alpha ($it['letter']);?></acronym></a><br>
          <small>Балл&nbsp;&nbsp;Всего&nbsp;&nbsp;Попытка</small>
        </th>
<?php
  }
?>
        <th class="total div">Всего</th>
      </tr>
<?php
  $place=0; $prev_total=$max_total+1; $place_delta=0;
  for ($i=0; $i<$user_count; $i++) {
    if ($judge_assoc[$users[$i]['id']]) continue;
      $u=$users[$i];
      $uid=$u['id'];
      $class='';
      if ($i%2==0) $class='l';
      if ($user_id==$u['id']) $class.=(($class!='')?(' '):('')).'act';

      if ($data[$uid]['total']<$prev_total)
        {
          $place+=$place_delta+1;
          $place_delta=0;
        } else $place_delta++;
?>
      <tr<?=(($class!='')?(' class="'.$class.'"'):(''));?>>
        <td class="first"><?=$place;?></td>
        <td class="user"><a href="<?=user_generate_viewlink ($u['id']);?>"><?=$u['name'];?></a></td>
<?php
    for ($j=0; $j<$problems_count; $j++) {
      $p=$problems[$j];
      $pid=$p['id'];
      $t=$data[$uid][$pid];
      $ok=$t['acc'];
      
      $oko=''; $okc='';
      if ($ok) {
        $oko='<b>';
        $okc='</b>';
      }
?>
        <td class="l"><?=$oko;?><?=((isset ($t['points']))?($t['points']):('0'));?><?=$okc;?></td><td class="m"><?=$oko;?><?=((isset ($t['total']))?($t['total']):('0'));?><?=$okc;?></td><td class="r"><?=$oko;?><?=((isset ($t['try']))?($t['try']):('0'));?><?=$okc;?></td>
<?php
    }
?>
        <td class="total div"><b><?=$data[$uid]['total'];?></b></td>
      </tr>
<?php
    $prev_total=$data[$uid]['total'];
  }
?>

      <tr class="stat"><th class="h" colspan="2">Статистика</th>
<?php
    for ($j=0; $j<$problems_count; $j++) {
      $it=$problems[$j];
?>
      <th class="prb" colspan="3"><?=color_div ($stats_data[$it['id']]['ok_perc']);?><a href=".?page=problems&act=view&id=<?=$it['id'];?>&redirect=<?=$redirect?>"><acronym title="<?=htmlspecialchars ($it['name']);?>">Задача <?=core_alpha ($it['letter']);?></acronym></a></th>
<?php    }
?><th class="div">&nbsp;</th></tr>
<?php
  for ($i=0, $n=count ($stats_info); $i<$n; $i++) {
    $s=$stats_info[$i];
    print ('<tr class="stat'.(($i%2==0)?(' l'):('')).'"><td class="h" colspan="2">'.$s['title'].'</td>');
    for ($j=0; $j<$problems_count; $j++) {
      $it=$problems[$j];
      $t=$stats_data[$it['id']][$s['id']];
      if ($t=='') $t=0;
      print ('<td colspan="3">'.$t.'</td>');
    }
    print ('<td class="div">&nbsp;</td></tr>');
  }
?>

    </table>
  </div>
